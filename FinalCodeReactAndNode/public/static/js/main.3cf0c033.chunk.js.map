{"version":3,"sources":["components/signin/SignIn.js","components/signUp/SignUp.js","components/Mainpage.js","container/Form.js","serviceWorker.js","index.js","App.js"],"names":["SignIn","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","pwd","users","inherits","createClass","key","value","event","setState","target","preventDefault","superagent","post","send","name","set","then","res","console","log","react_default","a","createElement","className","action","onSubmit","handleSubmit","bind","noValidate","htmlFor","type","id","placeholder","onChange","handleUsernameChange","required","handlePasswordChange","React","Component","SignUp","email","handleEmailChange","Mainpage","BrowserRouter","Link","to","Route","exact","path","component","Form","Mainpage_Mainpage","Boolean","window","location","hostname","match","axios","ReactDOM","render","Form_Form","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cf0c033.chunk.js","sourcesContent":["import React from 'react';\nimport './SignIn.css';\nimport superagent from 'superagent';\n\n// import Axios from 'axios';\n\nexport class SignIn extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            username: '',\n            pwd: '',\n            users: [],\n        };\n    }\n    handleUsernameChange(event){\n        this.setState({username: event.target.value});        \n    }\n    handlePasswordChange(event){\n        this.setState({pwd: event.target.value});\n    }\n    handleSubmit(event){\n        event.preventDefault();        \n        superagent.post('/signin')\n        .send({ name: this.state.username, pwd: this.state.pwd})     \n        .set('Accept', 'application/json')\n        .then(res => {\n            console.log(\"...--->\", res);\n        });      \n    }\n\n    \n    render(){        \n    return(\n        <div className=\"signIn\">\n            <form action=\"#\" className=\"formFields\" onSubmit={this.handleSubmit.bind(this)} noValidate>\n                <div className=\"formField\">\n                    <label htmlFor=\"username\" className=\"label\">Full Name</label>\n                    <input type=\"text\" id=\"username\" className=\"input\" placeholder=\"Enter your name\" name=\"username\" onChange={this.handleUsernameChange.bind(this)} value={this.state.username} required/>\n                </div>\n                <div className=\"formField\">\n                    <label htmlFor=\"pwd\" className=\"label\">Password</label>\n                    <input type=\"password\" id=\"pwd\" className=\"input\" placeholder=\"Enter your password\" name=\"pwd\" onChange={this.handlePasswordChange.bind(this)} value ={this.state.pwd} required/>\n                </div>\n                <div className=\"formField\">\n                    \n                    <button id=\"btn\" className=\"btn\" name=\"Submit\">SignIn</button>\n                </div>\n            </form>\n        </div>\n    )}\n}","import React from 'react';\nimport './SignUp.css';\nimport superagent from 'superagent';\nexport class SignUp extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            username: '',\n            pwd: '',\n            email: '',\n            users: [],\n        };        \n    }\n    handleUsernameChange(event){\n        this.setState({username: event.target.value});\n        \n    }\n    handlePasswordChange(event){\n        this.setState({pwd: event.target.value});\n    }    \n    handleEmailChange(event){\n        this.setState({email: event.target.value});\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        superagent.post('/signup')\n        .send({ name: this.state.username, pwd: this.state.pwd, email: this.state.email})     \n        .set('Accept', 'application/json')\n        .then(res => {\n            console.log(\"...--->\", res);\n        });              \n    }\n    \n    render(){\n        console.log(\"state : \",this.state);\n    return(\n        <div className=\"signIn\">\n            <form action=\"#\" className=\"formFields\" onSubmit={this.handleSubmit.bind(this)} noValidate>\n                <div className=\"formField\">\n                    <label htmlFor=\"username\" className=\"label\">Full Name</label>\n                    <input type=\"text\" id=\"username\" className=\"input\" placeholder=\"Enter your name\" name=\"username\" onChange={this.handleUsernameChange.bind(this)} value={this.state.username} required/>\n                </div>\n                <div className=\"formField\">\n                    <label htmlFor=\"email\" className=\"label\">Email</label>\n                    <input type=\"email\" id=\"email\" className=\"input\" placeholder=\"Enter your email\" name=\"email\" onChange={this.handleEmailChange.bind(this)} value={this.state.email} required/>\n                   \n                </div>\n                <div className=\"formField\">\n                    <label htmlFor=\"pwd\" className=\"label\">Password</label>\n                    <input type=\"password\" id=\"pwd\" className=\"input\" placeholder=\"Enter your password\" name=\"pwd\" onChange={this.handlePasswordChange.bind(this)} value ={this.state.pwd} required/>\n                </div>                \n                <div className=\"formField\">\n                    \n                    <button id=\"btn\" className=\"btn\" name=\"Submit\">SignUp</button>\n                </div>\n            </form>\n        </div>\n    )}\n}","import React from 'react';\nimport './Mainpage.css';\n\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\n// import { Manager, Reference, Popper } from 'react-popper';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\n\nimport {SignIn} from './signin/SignIn';\nimport {SignUp} from './signUp/SignUp';\n\nexport const Mainpage = ()=>{\n    return(\n        <div className=\"container\">\n            <div className=\"inner-container\">\n            <Router>\n                <div className=\"router-div\">\n                <div className=\"tab-view\">\n                    <ul>\n                        <li className=\"signup-li active\">\n                            <Link to=\"/\">SignUp</Link>\n                        </li>\n                        <li className=\"signin-li\">\n                            <Link to=\"/signin\">SignIn</Link>\n                        </li>\n                    </ul>\n                    <Route exact path=\"/\" component={SignUp} />\n                    <Route exact path=\"/signin\" component={SignIn} />\n\n                </div>\n            </div>    \n            </Router>    \n\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport './Form.css';\nimport {Mainpage} from '../components/Mainpage';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nexport const Form = () =>{\n    return(\n        <div className=\"main-page\">\n        <Mainpage/>\n        </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nwindow.axios = axios;\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","import './App.css';\n//export default App;\nimport React from 'react';\nimport { Form } from './container/Form';\nexport const App = ()=><Form/>;"],"sourceRoot":""}