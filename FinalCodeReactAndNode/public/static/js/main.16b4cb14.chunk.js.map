{"version":3,"sources":["components/signin/SignIn.js","components/signUp/SignUp.js","components/Mainpage.js","container/Form.js","serviceWorker.js","index.js","App.js"],"names":["SignIn","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","pwd","users","inherits","createClass","key","value","event","setState","target","preventDefault","superagent","post","send","name","set","then","res","console","log","react_default","a","createElement","className","action","onSubmit","handleSubmit","bind","noValidate","htmlFor","type","id","placeholder","onChange","handleUsernameChange","required","handlePasswordChange","React","Component","emailRegex","RegExp","formValid","formErrors","valid","values","forEach","val","length","SignUp","props","e","concat","email","confirm_pwd","error","handleChange","_e$target","test","defineProperty","Mainpage","BrowserRouter","Link","to","Route","exact","path","component","Form","Mainpage_Mainpage","Boolean","window","location","hostname","match","axios","ReactDOM","render","Form_Form","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16b4cb14.chunk.js","sourcesContent":["import React from 'react';\nimport './SignIn.css';\nimport superagent from 'superagent';\n\n// import Axios from 'axios';\n\nexport class SignIn extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            username: '',\n            pwd: '',\n            users: [],\n        };\n    }\n    handleUsernameChange(event){\n        this.setState({username: event.target.value});        \n    }\n    handlePasswordChange(event){\n        this.setState({pwd: event.target.value});\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        superagent.post('/signin')\n        .send({ name: 'A Raj', pwd: '12345'})\n        .set('X-API-Key', 'foobar')\n        .set('Accept', 'application/json')\n        .then(res => {\n            console.log(\"...--->\", res);\n        })        \n    }\n\n    \n    render(){        \n    return(\n        <div className=\"signIn\">\n            <form action=\"#\" className=\"formFields\" onSubmit={this.handleSubmit.bind(this)} noValidate>\n                <div className=\"formField\">\n                    <label htmlFor=\"username\" className=\"label\">Full Name</label>\n                    <input type=\"text\" id=\"username\" className=\"input\" placeholder=\"Enter your name\" name=\"username\" onChange={this.handleUsernameChange.bind(this)} value={this.state.username} required/>\n                </div>\n                <div className=\"formField\">\n                    <label htmlFor=\"pwd\" className=\"label\">Password</label>\n                    <input type=\"password\" id=\"pwd\" className=\"input\" placeholder=\"Enter your password\" name=\"pwd\" onChange={this.handlePasswordChange.bind(this)} value ={this.state.pwd} required/>\n                </div>\n                <div className=\"formField\">\n                    \n                    <button id=\"btn\" className=\"btn\" name=\"Submit\">SignIn</button>\n                </div>\n            </form>\n        </div>\n    )}\n}","import React from 'react';\nimport './SignUp.css';\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_'{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)\nconst formValid = formErrors =>{\n    let valid = true;\n    Object.values(formErrors).forEach(val =>{\n        val.length > 0 && (valid = false);\n        \n    });\n    return valid;\n}\n\nexport class SignUp extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            \n            email: null,\n            pwd: null,\n            confirm_pwd: null,\n            formErrors: {\n                name: \"\",\n                email: \"\",\n                pwd: \"\",\n                confirm_pwd: \"\",\n            }\n            \n        };\n       \n    }\n    handleSubmit = e=>{\n        e.preventDefault();\n        if(formValid(this.state.formErrors)){\n            console.log(`--submitting--\n             Name: ${this.state.name}\n             Email: ${this.state.email}\n             Pwd: ${this.state.pwd}\n             c_pwd: ${this.state.confirm_pwd}\n             `);\n\n        }\n        else{\n            console.error(\"Form Invalid - Display error message\")\n        }\n    };\n    handleChange = e =>{\n        e.preventDefault();\n        const {username, value} = e.target;\n        let formErrors = this.state.formErrors;\n        // console.log(\"Name: \", name);\n        // console.log(\"Value: \",value);\n        switch (username){\n            case 'name':\n                formErrors.name = value.length < 3 ? \"minimum 3 character required\" : \"\";\n                break;\n            case 'email':\n                formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n                break;\n            case 'pwd':    \n                formErrors.pwd = value.length < 6 ? \"minimum 6 character required\" : \"\";\n                break;\n            case 'confirm_pwd':    \n                formErrors.confirm_pwd = value.length < 6 ? \"minimum 6 character required\" : \"\";\n                break;\n                default:\n                break;\n        }\n        this.setState({formErrors,[username]:value}, ()=>console.log(this.state));\n    }\n    render(){\n        const { formErrors } = this.state;\n    return(\n        <div className=\"signUp\">\n            \n            <form action=\"#\" className=\"formFields\" onSubmit={this.handleSubmit} noValidate>\n                <div className=\"formField\">\n                    <label htmlFor=\"name\" className=\"label\">Full Name</label>\n                    <input type=\"text\" id=\"name\" className=\"input\" placeholder=\"Enter your name\" name=\"name\" required onChange={this.handleChange}/>\n                    {formErrors.name.length > 0 && (\n                    <span className=\"errorMessage\">{formErrors.name}</span>\n                    )}\n                </div>\n                <div className=\"formField\">\n                    <label htmlFor=\"email\" className=\"label\">Email</label>\n                    <input type=\"email\" id=\"email\" className=\"input\" placeholder=\"Enter your email\" name=\"email\" onChange={this.handleChange} required/>\n                    {formErrors.email.length > 0 && (\n                    <span className=\"errorMessage\">{formErrors.email}</span>\n                    )}\n                </div>\n                <div className=\"formField\">\n                    <label htmlFor=\"pwd\" className=\"label\">Password</label>\n                    <input type=\"password\" id=\"pwd\" className=\"input\" placeholder=\"Enter your password\" name=\"pwd\" onChange={this.handleChange} required/>\n                    {formErrors.pwd.length > 0 && (\n                    <span className=\"errorMessage\">{formErrors.pwd}</span>\n                    )}\n                </div>\n                <div className=\"formField\">\n                    <label htmlFor=\"confirm_pwd\" className=\"label\">Confirm Password</label>\n                    <input type=\"password\" id=\"confirm_pwd\" className=\"input\" placeholder=\"Confirm Password\" name=\"confirm_pwd\" onChange={this.handleChange} required/>\n                    {formErrors.confirm_pwd.length > 0 && (\n                    <span className=\"errorMessage\">{formErrors.confirm_pwd}</span>\n                    )}\n                </div>\n                <div className=\"formField\">\n                    <label className=\"checkbox\">\n                        <input type=\"checkbox\" className=\"form_chkbox\" name=\"hasAgreed\" required/>I agree all statements. \n                    \n                    </label>\n                </div>\n\n                <div className=\"formField\">\n                    \n                    <button id=\"btn\" className=\"btn\" name=\"Submit\">SignUp</button>\n                </div>\n\n            </form>\n        \n        </div>\n    )}\n\n}","import React from 'react';\nimport './Mainpage.css';\n\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\n// import { Manager, Reference, Popper } from 'react-popper';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../../node_modules/bootstrap/dist/js/bootstrap.min.js';\n\nimport {SignIn} from './signin/SignIn';\nimport {SignUp} from './signUp/SignUp';\n\nexport const Mainpage = ()=>{\n    return(\n        <div className=\"container\">\n            <div className=\"inner-container\">\n            <Router>\n                <div className=\"router-div\">\n                <div className=\"tab-view\">\n                    <ul>\n                        <li className=\"signup-li active\">\n                            <Link to=\"/\">SignUp</Link>\n                        </li>\n                        <li className=\"signin-li\">\n                            <Link to=\"/signin\">SignIn</Link>\n                        </li>\n                    </ul>\n                    <Route exact path=\"/\" component={SignUp} />\n                    <Route exact path=\"/signin\" component={SignIn} />\n\n                </div>\n            </div>    \n            </Router>    \n\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport './Form.css';\nimport {Mainpage} from '../components/Mainpage';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nexport const Form = () =>{\n    return(\n        <div className=\"main-page\">\n        <Mainpage/>\n        </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nwindow.axios = axios;\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","import './App.css';\n//export default App;\nimport React from 'react';\nimport { Form } from './container/Form';\nexport const App = ()=><Form/>;"],"sourceRoot":""}